# Security Configuration for Terraform Infrastructure Project
# This file defines security policies and settings for GitHub Actions workflows

# Security Policy Configuration
security_policy:
  # OIDC Configuration for AWS Authentication
  oidc:
    provider: "token.actions.githubusercontent.com"
    audience: "sts.amazonaws.com"
    role_arn: "${{ secrets.AWS_ROLE_ARN }}"
    session_name: "GitHubActions"

  # Environment Protection Rules
  environments:
    production:
      protection_rules:
      - required_reviewers: [ "terraform-admin", "security-team" ]
      - required_status_checks: [ "terraform-validate", "security-scan" ]
      - deployment_branch_policy:
          protected_branches: [ "main" ]
      - wait_timer: 0
      - prevent_self_review: true

    staging:
      protection_rules:
      - required_reviewers: [ "terraform-admin" ]
      - required_status_checks: [ "terraform-validate", "security-scan" ]
      - deployment_branch_policy:
          protected_branches: [ "main", "develop" ]
      - wait_timer: 0
      - prevent_self_review: false

    development:
      protection_rules:
      - required_status_checks: [ "terraform-validate" ]
      - deployment_branch_policy:
          protected_branches: [ "main", "develop", "feature/*" ]
      - wait_timer: 0

# Branch Protection Rules
branch_protection:
  main:
    required_status_checks:
      strict: true
      contexts:
      - "terraform-validate"
      - "security-scan"
      - "cost-optimization"
    enforce_admins: true
    required_pull_request_reviews:
      required_approving_review_count: 2
      dismiss_stale_reviews: true
      require_code_owner_reviews: true
    restrictions:
      users: []
      teams: [ "terraform-admin", "security-team" ]

  develop:
    required_status_checks:
      strict: true
      contexts:
      - "terraform-validate"
      - "security-scan"
    enforce_admins: false
    required_pull_request_reviews:
      required_approving_review_count: 1
      dismiss_stale_reviews: true
    restrictions:
      users: []
      teams: [ "terraform-admin" ]

# Security Scanning Configuration
security_scanning:
  # SAST Configuration
  sast:
    languages: [ "python", "javascript", "terraform" ]
    tools:
    - name: "CodeQL"
      version: "v3"
      queries: [ "security-extended", "security-and-quality" ]
    - name: "Semgrep"
      version: "latest"
      rules: [ "p/security-audit", "p/terraform" ]

  # Dependency Scanning
  dependency_scanning:
    tools:
    - name: "Safety"
      version: "latest"
      check_requirements: true
    - name: "Bandit"
      version: "latest"
      config: ".bandit"
    - name: "Checkov"
      version: "latest"
      frameworks: [ "terraform", "cloudformation" ]

  # Infrastructure Security
  infrastructure_security:
    tools:
    - name: "TFLint"
      version: "latest"
      rules: [ "terraform_deprecated_index", "terraform_unused_declarations" ]
    - name: "tfsec"
      version: "latest"
      severity: [ "CRITICAL", "HIGH", "MEDIUM" ]
    - name: "Checkov"
      version: "latest"
      skip_checks: [ "CKV_AWS_130", "CKV_AWS_131" ] # Skip specific checks if needed

# Secrets Management
secrets_management:
  # Required Secrets
  required_secrets:
  - name: "AWS_ROLE_ARN"
    description: "AWS IAM Role ARN for OIDC authentication"
    pattern: "arn:aws:iam::[0-9]{12}:role/.*"
  - name: "TF_VAR_db_password"
    description: "Database password for Terraform variables"
    pattern: ".*"

  # Prohibited Patterns
  prohibited_patterns:
  - pattern: "AKIA[0-9A-Z]{16}"
    description: "AWS Access Key ID"
  - pattern: "BEGIN.*PRIVATE KEY"
    description: "Private key"
  - pattern: "password.*=.*['\"][^'\"]*['\"]"
    description: "Hardcoded password"
  - pattern: "secret.*=.*['\"][^'\"]*['\"]"
    description: "Hardcoded secret"

# Compliance Configuration
compliance:
  # Standards Compliance
  standards:
  - name: "SOC2"
    controls:
    - "CC6.1: Logical and physical access controls"
    - "CC7.1: System operation monitoring"
    - "CC8.1: Change management process"
  - name: "PCI-DSS"
    controls:
    - "Requirement 1: Install and maintain a firewall configuration"
    - "Requirement 2: Do not use vendor-supplied defaults"
    - "Requirement 7: Restrict access to cardholder data"
  - name: "ISO 27001"
    controls:
    - "A.9.1: Business requirements of access control"
    - "A.12.1: Operational procedures and responsibilities"
    - "A.15.1: Information security policy"

  # Audit Requirements
  audit:
    log_retention_days: 365
    change_tracking: true
    access_control: true
    incident_response: true

# Cost Management
cost_management:
  # Budget Thresholds
  budgets:
    development:
      monthly_limit: 150
      alert_threshold: 0.8 # 80% of budget
    staging:
      monthly_limit: 300
      alert_threshold: 0.8
    production:
      monthly_limit: 800
      alert_threshold: 0.9 # 90% of budget

  # Cost Optimization Rules
  optimization_rules:
  - name: "Oversized Instances"
    condition: "instance_cost > 100"
    action: "recommend_downsizing"
  - name: "Unused Resources"
    condition: "resource_unused_days > 7"
    action: "recommend_cleanup"
  - name: "Budget Overrun"
    condition: "cost > budget * 1.2"
    action: "alert_team"

# Monitoring and Alerting
monitoring:
  # Metrics Collection
  metrics:
  - name: "Deployment Frequency"
    type: "DORA"
    collection: "daily"
  - name: "Lead Time for Changes"
    type: "DORA"
    collection: "per_deployment"
  - name: "Mean Time to Recovery"
    type: "DORA"
    collection: "per_incident"
  - name: "Change Failure Rate"
    type: "DORA"
    collection: "per_deployment"

  # Alerting Rules
  alerts:
  - name: "Security Vulnerability"
    condition: "critical_vulnerability_detected"
    channels: [ "security-team", "slack-security" ]
    priority: "high"
  - name: "Cost Overrun"
    condition: "cost > budget * 1.1"
    channels: [ "finance-team", "slack-costs" ]
    priority: "medium"
  - name: "Deployment Failure"
    condition: "deployment_failed"
    channels: [ "devops-team", "slack-devops" ]
    priority: "high"

# Incident Response
incident_response:
  # Response Procedures
  procedures:
  - name: "Security Incident"
    steps:
    - "Immediate isolation of affected resources"
    - "Assessment of impact and scope"
    - "Communication to stakeholders"
    - "Remediation and recovery"
    - "Post-incident review"

  - name: "Cost Incident"
    steps:
    - "Immediate cost analysis"
    - "Resource optimization recommendations"
    - "Budget adjustment if necessary"
    - "Process improvement review"

  - name: "Deployment Incident"
    steps:
    - "Rollback to previous stable state"
    - "Root cause analysis"
    - "Fix and redeployment"
    - "Monitoring and validation"

# Documentation Requirements
documentation:
  required_docs:
  - "README.md"
  - "SECURITY.md"
  - "CHANGELOG.md"
  - "DEPLOYMENT.md"
  - "COST_ANALYSIS.md"

  update_triggers:
  - "infrastructure_changes"
  - "security_updates"
  - "cost_optimizations"
  - "process_changes"
